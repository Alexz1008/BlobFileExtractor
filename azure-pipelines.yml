# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

parameters:
- name: filename
  displayName: File Name
  type: string
  default: ubuntu-latest

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '2e3e90cb-f19a-454e-bf5e-965eef55cd14'

  # Function app name
  functionAppName: ''

  # Agent VM image name
  vmImageName: 'windows-2019'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/'
  
  containername: 'testcontainer'
  filename: 'test.yml'
  accountkey: 'Bk/ppTDkk6wX3gWrsMnAPSbQ4clHGS6tyUk56nuAsCTbAUsh1KJF+4VZSUdS6PAF9U2GFtnRE6EF+AStPjDZRg=='
  accountname: 'alexz1008teststorage'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Self-learning (762b33d6-f108-422a-999a-e0f6ca67203f)'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
          mkdir $(Build.SourcesDirectory)\BlobFile
          az storage blob download --container-name $(containername) --file $(Build.SourcesDirectory)\BlobFile\$(filename) --name $(filename) --account-key $(accountkey) --account-name $(accountname)
          ls $(Build.SourcesDirectory)\BlobFile

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'